services:
  zookeeper:
    image: "bitnami/zookeeper:latest"
    hostname: zookeeper
    networks:
      - ems
    ports:
      - 2181:2181
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ALLOW_ANONYMOUS_LOGIN: 'yes'

  kafka:
    image: "bitnami/kafka:latest"
    hostname: kafka
    networks:
      - ems
    ports:
      - 9092:9092
      - 29092:29092
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ADVERTISED_HOST_NAME: kafka
      ALLOW_PLAINTEXT_LISTENER: 'yes'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://:9092,PLAINTEXT_HOST://:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    working_dir: /data
    volumes:
      - ./data:/data

  kafka-create-topics:
    image: "confluentinc/cp-enterprise-kafka:6.0.0"
    depends_on:
      - kafka
    hostname: kafka-create-topics
    command: [ "bash", "./create-topics-and-data.sh" ]
    working_dir: /scripts
    networks:
      - ems
    volumes:
      - ./scripts:/scripts

  kafdrop:
    image: obsidiandynamics/kafdrop
    restart: "no"
    ports:
      - "9000:9000"
    networks:
      - ems
    environment:
      KAFKA_BROKERCONNECT: kafka:9092
      JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
    depends_on:
      - kafka

  event-processor:
    build:
      context: ./event_processor
    hostname: event-processor
    image: edpo-ems-event-processor
    ports:
      - "7071:7071"
    networks:
      - ems
    depends_on:
      - kafka
      - kafka-create-topics

  frontend-monitoring:
    build:
      context: ./frontend-monitoring
    image: edpo-ems-frontend-monitoring
    stdin_open: true
    ports:
      - "3003:3003"
    networks:
      - ems

  actuator:
    build:
      context: ./actuator
    image: edpo-ems-actuator
    networks:
      - ems
    depends_on:
      - kafka
      - kafka-create-topics

  producerA:
    build:
      context: ./producer_production
    image: edpo-ems-producer-production
    environment:
      JAVA_OPTS: "2022_Production2.csv"
    networks:
      - ems

  producerB:
    image: edpo-ems-producer-production
    environment:
      JAVA_OPTS: "2022_Production.csv"
    networks:
      - ems

  consumerA:
    build:
      context: ./producer_consumption
    image: edpo-ems-producer-consumption
    environment:
      JAVA_OPTS: "2022_Consumption.csv"
    networks:
      - ems

  consumerB:
    image: edpo-ems-producer-consumption
    environment:
      JAVA_OPTS: "2022_Consumption2.csv"
    networks:
      - ems

networks:
  ems:
    driver: bridge